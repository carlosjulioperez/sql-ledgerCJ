-------------------------------------------------------
-- Payroll tables as designed by dieter. 
-- Payroll is under development and not tested yet.
-------------------------------------------------------
CREATE TABLE employeededuction (
 employee_id   integer,          
 deduction_id  integer,          
 before        double precision, 
 after         double precision,
 rate          real             
);

create table deduction(
 id                integer   default nextval(('id'::text)::regclass),
 description       text     ,
 ap_accno_id       integer  ,
 expense_accno_id  integer  ,
 employeepays      real     ,
 employerpays      real     ,
 fromage           smallint ,
 toage             smallint 
);

CREATE TABLE deductionafter(
 trans_id      integer ,
 deduction_id  integer 
);

CREATE TABLE deductionbase(
 trans_id      integer     ,     
 deduction_id  integer      ,    
 maximum       double precision 
);

CREATE TABLE deductionrate(
 trans_id  integer         , 
 rate      double precision ,
 amount    double precision ,
 above     double precision ,
 below     double precision
);


-- Preferences for users. Not included. Just on the design stage yet.
--   ALTER TABLE defaults ADD COLUMN employee_id int DEFAULT 0;
--   UPDATE defaults SET employee_id = 0 WHERE employee_id IS NULL;

------------------------------------------------------------
-- Document management. 
-- Disabled for now. Needs redsign for ease of use.
------------------------------------------------------------
CREATE SEQUENCE doc_id START 1;
SELECT nextval ('doc_id');

-- imagetype:
--	Small,Medium,Large: Used for products on e-comm website
-- 	Other: for any other data
--
CREATE TABLE doc (
        id              integer default nextval(('id'::text)::regclass) primary key,
	foldername	text,
        filename        text,
        filetype        text,
	usergroup	text,
        trans_id        integer,
        reference       text,
        tags	    	text,
        created_by      integer,
        modified_by     integer,
        created         timestamp default current_timestamp,
        modified        timestamp
);


--------------------------------------------
-- Inventory transfers module
--------------------------------------------
CREATE TABLE trf (
    id 			integer PRIMARY KEY DEFAULT nextval(('id'::text)::regclass),
    transdate 		date,
    trfnumber 		text,
    reference 		text,
    description 	text,
    notes 		text,
    department_id 	integer,
    from_warehouse_id	integer,
    to_warehouse_id 	integer DEFAULT 0,
);

-- Customisations of 'inventory' table for transfer module
-- linetype:
---- 0 for transactions from ar, ap, oe etc.
---- 1 for transaction entered by user in trf
---- 2 for offsetting transaction generated by system in trf
ALTER TABLE inventory 
	ADD COLUMN department_id 	integer,
	ADD COLUMN warehouse_id2 	integer,
	ADD COLUMN serialnumber 	text,
	ADD COLUMN itemnotes 		text,
	ADD COLUMN cost 		integer,
	ADD COLUMN linetype 		CHAR(1) DEFAULT '0'
;

---------------------------------------------------------
-- Tagging of data by user groups for groupwise security
--------------------------------------------------------
ALTER TABLE ar ADD COLUMN usergroup TEXT;
ALTER TABLE ap ADD COLUMN usergroup TEXT;
ALTER TABLE oe ADD COLUMN usergroup TEXT;
ALTER TABLE gl ADD COLUMN usergroup TEXT;
ALTER TABLE employee ADD COLUMN usergroup TEXT;
ALTER TABLE trf ADD COLUMN usergroup TEXT;
ALTER TABLE doc ADD COLUMN usergroup TEXT;
ALTER TABLE customer ADD COLUMN usergroup TEXT;
ALTER TABLE vendor ADD COLUMN usergroup TEXT;
ALTER TABLE chart ADD COLUMN usergroup TEXT;
ALTER TABLE department ADD COLUMN usergroup TEXT;
ALTER TABLE warehouse ADD COLUMN usergroup TEXT;
ALTER TABLE project ADD COLUMN usergroup TEXT;
ALTER TABLE parts ADD COLUMN usergroup TEXT;
ALTER TABLE partsgroup ADD COLUMN usergroup TEXT;

-- Add project_id to inventory
ALTER TABLE inventory ADD COLUMN project_id INTEGER;

